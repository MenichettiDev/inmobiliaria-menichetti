@model IEnumerable<InmobiliariaApp.Models.Pago>


    @if (TempData["SuccessMessage"] != null)
{
    <script>
        Swal.fire({
            icon: 'success',
            title: '¡Éxito!',
            text: 'La operación fue exitosa!',
            confirmButtonText: 'Cerrar',
            customClass: {
                popup: 'rounded shadow'
            }
        });
    </script>
}

@{
    ViewData["Title"] = "Lista de Pagos";
}

<h1 class="mb-4"><i class="bi bi-file-earmark-dollar-fill"></i> Lista de Pagos</h1>

<p>
    <a asp-action="Insertar" class="btn btn-success">
        <i class="bi bi-plus-circle-fill"></i> Nuevo Pago
    </a>
</p>

<form method="get" class="mb-4">
    <div class="row">
        <div class="col-md-3">
            <label>Contrato</label>
            <select name="idContrato" class="form-control">
                <option value="">Todos</option>
                @foreach (var c in ViewBag.Contratos)
                {
                    <option value="@c.IdContrato"
                        selected="@(Context.Request.Query["idContrato"] == c.IdContrato.ToString())">
                        Contrato @c.IdContrato
                    </option>
                }
            </select>
        </div>

        <div class="col-md-2">
            <label>Fecha Desde</label>
            <input type="date" name="desde" value="@Context.Request.Query["desde"]" class="form-control" />
        </div>

        <div class="col-md-2">
            <label>Fecha Hasta</label>
            <input type="date" name="hasta" value="@Context.Request.Query["hasta"]" class="form-control" />
        </div>

        <div class="col-md-2">
            <label>Importe Mínimo</label>
            <input type="number" name="importeMin" value="@Context.Request.Query["importeMin"]" class="form-control" />
        </div>

        <div class="col-md-2">
            <label>Importe Máximo</label>
            <input type="number" name="importeMax" value="@Context.Request.Query["importeMax"]" class="form-control" />
        </div>

        <div class="col-md-2">
            <label>Estado</label>
            <select name="estado" class="form-control">
                <option value="">Todos</option>
                <option value="Pendiente" selected="@(Context.Request.Query["estado"] == "Pendiente")">Pendiente
                </option>
                <option value="Pagado" selected="@(Context.Request.Query["estado"] == "Pagado")">Pagado</option>
                <option value="Anulado" selected="@(Context.Request.Query["estado"] == "Anulado")">Anulado</option>
            </select>
        </div>

        <div class="col-md-1 d-flex align-items-end">
            <button type="submit" class="btn btn-primary w-100">Filtrar</button>
        </div>
    </div>
</form>

<table class="table table-bordered table-hover shadow-sm align-middle bg-white table-striped">
    <thead class="table-dark">
        <tr>
            <th>ID Pago</th>
            <th>Contrato</th>
            <th>Nro Cuota</th>
            <th>Fecha Vencimiento</th>
            <th>Importe</th>
            <th>Estado</th>
            <th>Detalle</th>
            <th><i class="bi bi-gear-fill"></i> Acciones</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var p in Model)
        {
            <tr>
                <td>@p.IdPago</td>
                <td>Contrato @p.IdContrato</td>
                <td>Cuota @p.NumeroCuota</td>
                <td>@p.FechaVencimiento.ToShortDateString()</td>
                <td>@p.Importe.ToString("C")</td>
                <td>@p.Estado</td>
                <td>@p.Detalle</td>
                <td class="text-nowrap">
                    <a asp-action="Detalles" asp-route-id="@p.IdPago" class="btn btn-outline-info btn-sm" title="Detalles">
                        <i class="bi bi-info-circle-fill"></i>
                    </a>
                    <a asp-action="Editar" asp-route-id="@p.IdPago" class="btn btn-outline-warning btn-sm" title="Editar">
                        <i class="bi bi-pencil-fill"></i>
                    </a>
                    @if (p.Estado == "Pendiente")
                    {
                        <a asp-action="PagoCuota" asp-route-id="@p.IdPago" class="btn btn-outline-success btn-sm" title="Pagar">
                            <i class="bi bi-check-circle-fill"></i>
                        </a>
                    }
                    @if (p.Estado == "Pagado")
                    {
                        <a asp-action="Eliminar" asp-route-id="@p.IdPago" class="btn btn-outline-danger btn-sm" title="Anular">
                            <i class="bi bi-x-circle-fill"></i>
                        </a>
                    }
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="d-flex justify-content-between">
    <div>
        Página @ViewBag.PaginaActual de @ViewBag.TotalPaginas
    </div>
    <div>
        @if (ViewBag.PaginaActual > 1)
        {
            <a href="@Url.Action("Listar", new { 
            page = ViewBag.PaginaActual - 1,
             idContrato = Context.Request.Query["idContrato"],
              desde = Context.Request.Query["desde"],
               hasta = Context.Request.Query["hasta"],
                importeMin = Context.Request.Query["importeMin"],
                 importeMax = Context.Request.Query["importeMax"],
                  estado = Context.Request.Query["estado"] })" 
                  class="btn btn-outline-primary">Anterior</a>
        }
        @if (ViewBag.PaginaActual < ViewBag.TotalPaginas)
        {
            <a href="@Url.Action("Listar", new { page = ViewBag.PaginaActual + 1,
             idContrato = Context.Request.Query["idContrato"],
              desde = Context.Request.Query["desde"],
               hasta = Context.Request.Query["hasta"], 
               importeMin = Context.Request.Query["importeMin"],
                importeMax = Context.Request.Query["importeMax"],
                 estado = Context.Request.Query["estado"] })"
                  class="btn btn-outline-primary">Siguiente</a>
        }
    </div>
</div>

<nav aria-label="Paginación de pagos" class="mt-4">
    <ul class="pagination justify-content-center">
        @{
            int totalPaginas = ViewBag.TotalPaginas;
            int paginaActual = ViewBag.PaginaActual;
            string baseUrl = Context.Request.Path + QueryString.Create(Context.Request.Query.ToDictionary(x => x.Key, x => x.Value)).ToString();
        }

        @for (int i = 1; i <= totalPaginas; i++)
        {
            var url = Url.Action("Listar", new {
                page = i,
                idContrato = Context.Request.Query["idContrato"],
                desde = Context.Request.Query["desde"],
                hasta = Context.Request.Query["hasta"],
                importeMin = Context.Request.Query["importeMin"],
                importeMax = Context.Request.Query["importeMax"],
                estado = Context.Request.Query["estado"]
            });

            <li class="page-item @(i == paginaActual ? "active" : "")">
                <a class="page-link" href="@url">@i</a>
            </li>
        }
    </ul>
</nav>

